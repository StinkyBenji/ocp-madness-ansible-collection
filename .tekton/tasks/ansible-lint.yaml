apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ansible-lint
  annotations:
    tekton.dev/displayName: Ansible linting Tekton task
    tekton.dev/pipelines.minVersion: 0.37.4
    tekton.dev/tags: ansible,lint,linting,qa
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: Red Hat Community
spec:
  description: Tekton task for linting ansible manifests using the opensource tool ansible-lint.
  workspaces:
    - name: source
      description: A workspace that contains fetched git repo with ansible manifests defining elements to be linted.
  params:
    - name: context-directory
      type: string
      description: "Context directory within the source repository in which we want to execute ansible lint."
      default: "."
    - name: manifests-path
      type: string
      description: "Path to manifest files or manifest directory to be checked. Empty enables auto detection mode."
      default: ""
    - name: extra-args
      type: string
      description: "Extra parameters to pass to ansible linter"
      default: "--nocolor --offline"
    - name: image
      description: image to use to execute this task
      type: string
      default: "quay.io/ansible/creator-ee"
    - name: tag
      type: string
      description: The tag for the image.
      default: "latest"
    - name: verbose
      description: If true it will output the commands being executed in the script.
      type: string
      default: "false"
  steps:
    - name: ansible-linting
      image: $(params.image):$(params.tag)
      env:
        - name: HOME
          value: /tekton/home
      resources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      workingDir: $(workspaces.source.path)/$(params.context-directory)
      script: |
        #!/usr/bin/env sh

        # Force to exit if one of the command fails
        set -e

        if [ "$(params.verbose)" = "true" ] ; then
          set -x
        fi

        ansible-lint $(params.extra-args) $(params.manifests-path)
